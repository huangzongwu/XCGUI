#include "Common.h"



class CMyWnd
{
public:
    HWINDOW m_hWindow; //窗口句柄
    HELE    m_hButton; //按钮句柄
	
    BOOL Create() //创建窗口和按钮
    {
        m_hWindow=XWnd_Create(0,0,400,300,L"炫彩界面库-窗口"); //创建窗口
        if(m_hWindow)
        {
            m_hButton =XBtn_Create(10,10,80,25,L"按钮",m_hWindow); //创建按钮
            XEle_RegEventCPP(m_hButton,XE_BNCLICK,&CMyWnd::OnEventBtnClick); //注册按钮点击事件
			

			//创建布局，然后绑定布局到窗口顶部区域
			HXCGUI hLayoutTop = XLayout_Create();
			XWnd_BindLayoutObject(m_hWindow,window_position_top,hLayoutTop);

			//第二个参数 设置布局大小为填充父，第三个参数此时没意义
			//第三个参数只有在 第二个参数为 layout_size_type_fixed layout_size_type_weight
			//时有意义
			XLayout_SetLayoutHeight(hLayoutTop,layout_size_type_fill,1);
			XLayout_SetLayoutWidth(hLayoutTop,layout_size_type_fill,1);


			//调整布局
			XWnd_AdjustLayout(m_hWindow);

			//有的时候需要查看一下布局是否正确，可以设置布局的颜色，然后显示
			//因为布局主要作用是用来规划元素的坐标位置，一般是不用显示的
			//下面这两句代码，可以放在窗口创建之前
			XC_SetLayoutFrameColor(RGB(255,0,0));
			XC_ShowLayoutFrame(TRUE);

            XWnd_ShowWindow(m_hWindow,SW_SHOW); //显示窗口
            return TRUE;
        }
        return FALSE;
    }
    int OnEventBtnClick(BOOL *pBool) //按钮点击事件响应
    {
        //弹出消息框
        MessageBoxW(XWnd_GetHWND(m_hWindow),L"你点击了按钮",L"提示",MB_OK);
        *pBool=TRUE; //对该事件进行拦截
        return 0;    //事件的返回值
    }
};

int APIENTRY _tWinMain(HINSTANCE hInstance,HINSTANCE hPrevInstance,LPTSTR lpCmdLine, int nCmdShow)
{
    XInitXCGUI(); //初始化
    CMyWnd  MyWnd;
    if(MyWnd.Create())
    {
        XRunXCGUI(); //运行
    }
    XExitXCGUI(); //释放资源
    return 0;
}




